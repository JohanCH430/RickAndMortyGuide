{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    onChangeText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    characters = _useState4[0],\n    setCharacters = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    characterImage = _useState6[0],\n    setCharacterImage = _useState6[1];\n  useEffect(function () {\n    getData();\n  }, []);\n  var getData = function getData() {\n    fetch('https://rickandmortyapi.com/api/character').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCharacters(data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n  var searchCharacter = function searchCharacter() {\n    var character = characters.results.find(function (char) {\n      return char.name.toLowerCase() === text.toLowerCase();\n    });\n    if (character) {\n      setCharacterImage(character.image);\n    } else {\n      setCharacterImage(null);\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeText,\n      placeholder: \"Introduce nombre de un personaje de Rick and Morty\",\n      value: text\n    }), _jsx(Button, {\n      title: \"Buscar\",\n      onPress: searchCharacter\n    }), characterImage && _jsx(Image, {\n      style: styles.imgRick,\n      source: {\n        uri: characterImage\n      }\n    }), _jsx(Text, {\n      children: \"By Johan Cruz Huertas\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    width: '30%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 5\n  },\n  imgRick: {\n    width: 150,\n    height: 150\n  }\n});","map":{"version":3,"names":["StatusBar","React","useEffect","useState","StyleSheet","TextInput","Text","Button","Image","View","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","text","onChangeText","_useState3","_useState4","characters","setCharacters","_useState5","_useState6","characterImage","setCharacterImage","getData","fetch","then","response","json","data","catch","error","console","searchCharacter","character","results","find","char","name","toLowerCase","image","style","styles","container","children","input","placeholder","value","title","onPress","imgRick","source","uri","create","flex","backgroundColor","alignItems","justifyContent","width","height","borderColor","borderWidth","marginBottom","padding"],"sources":["C:/Users/Johan Cruz Huertas/RickAndMortyGuide/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, TextInput, Text, Button, Image, View } from 'react-native';\n\nexport default function App() {\n  const [text, onChangeText] = useState('');\n  const [characters, setCharacters] = useState([]);\n  const [characterImage, setCharacterImage] = useState(null);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    fetch('https://rickandmortyapi.com/api/character')\n      .then((response) => response.json())\n      .then((data) => {\n        setCharacters(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const searchCharacter = () => {\n    const character = characters.results.find(\n      (char) => char.name.toLowerCase() === text.toLowerCase()\n    );\n\n    if (character) {\n      setCharacterImage(character.image);\n    } else {\n      setCharacterImage(null); // Reiniciar la imagen si no se encuentra el personaje\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        onChangeText={onChangeText}\n        placeholder=\"Introduce nombre de un personaje de Rick and Morty\"\n        value={text}/>\n\n      <Button title=\"Buscar\" onPress={searchCharacter} />\n\n      {characterImage && (\n        <Image\n          style={styles.imgRick}\n          source={{\n            uri: characterImage,\n          }}\n        />\n      )}\n\n      <Text>By Johan Cruz Huertas</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '30%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 5,\n  },\n  imgRick: {\n    width: 150,\n    height: 150,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}